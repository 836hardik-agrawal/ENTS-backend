name: Build and Deploy

on:
  push:
  workflow_dispatch:

env:
  DOCKER_REGISTRY: ghcr.io
  DOCKER_USERNAME: ${{ github.actor }}
  DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

concurrency: production

jobs:
  build-docker:
    runs-on: ubuntu-latest
    permissions:
      packages: write

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Github containers
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ github.repository }}

      - name: Build and push portal
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}-portal
          labels: ${{ steps.meta.outputs.labels }}
      
      - name: Build and push Chirpstack HTTP Integration
        uses: docker/build-push-action@v3
        with:
          push: true
          file: cs-http.Dockerfile
          tags: ${{ steps.meta.outputs.tags }}-cs-http
          labels: ${{ steps.meta.outputs.labels }}
      
      - name: Build and push HTTP API
        uses: docker/build-push-action@v3
        with:
          push: true
          file: http-api.Dockerfile
          tags: ${{ steps.meta.outputs.tags }}-http-api
          labels: ${{ steps.meta.outputs.labels }}


  deploy:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: build-docker
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SERVER_SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "$SERVER_SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts
        env:
          SERVER_SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
        shell: bash

      - name: Generate docker-compose-prod.yml
        uses: cuchi/jinja2-action@v1.2.0
        with:
          template: docker-compose-prod.yml.j2
          output_file: docker-compose-prod.yml
          strict: true
          variables: |
            hostname=${{ secrets.HOSTNAME }}

      - name: Create directory
        run: |
          ssh ${{ secrets.USER }}@${{ secrets.HOSTNAME }} \
          "mkdir -p /home/${{ secrets.USER }}/${{ github.repository }}"

      - name: Copy files
        run: |
          rsync -rlpv $GITHUB_WORKSPACE/docker-compose-prod*.yml ${{ secrets.USER }}@${{ secrets.HOSTNAME }}:~/${{ github.repository }}
        shell: bash

      - name: Update services
        run: |
          ssh ${{ secrets.USER }}@${{ secrets.HOSTNAME }} \
          "cd /home/${{ secrets.USER }}/${{ github.repository }} &&
          docker compose -f docker-compose-prod.yml -f docker-compose-prod-cs_http.yml -f docker-compose-prod-api.yml pull &&
          docker compose -f docker-compose-prod.yml -f docker-compose-prod-cs_http.yml -f docker-compose-prod-api.yml up -d"
        shell: bash
