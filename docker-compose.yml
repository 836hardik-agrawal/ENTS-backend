version: "3.9"

services:
  backend:
    build:
      context: . 
      dockerfile: backend.Dockerfile
    image: dirtviz-backend
    environment:
      DB_USER: dirtviz
      DB_PASS: password
      DB_HOST: postgresql
      DB_PORT: 5432
      DB_DATABASE: dirtviz
      BOKEH_ALLOW_WS_ORIGIN: "localhost:8000"
    ports:
      - "8000:8000"
    depends_on:
      - postgresql


  frontend:
    build: 
      context: . 
      dockerfile: frontend.Dockerfile
    image: dirtviz-frontend
    ports:
      - "3000:3000"
    volumes:
      - "./frontend/src:/app/src"
    environment:
       - NODE_ENV="development"

  # portal:
  #   build: .
  #   environment:
  #     DB_USER: dirtviz
  #     DB_PASS: password
  #     DB_HOST: postgresql
  #     DB_PORT: 5432
  #     DB_DATABASE: dirtviz
  #     BOKEH_ALLOW_WS_ORIGIN: "localhost:5006"
  #   ports:
  #     - "5006:5006"
  #   depends_on:
  #     - postgresql

  postgresql:
    image: postgres:13
    environment:
      POSTGRES_USER: dirtviz
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgresqldata:/var/lib/postgresql/data
    networks:
      default:
    deploy:
      resources:
        limits:
          memory: 4g
        reservations:
          memory: 3g

  adminer:
    image: adminer
    ports:
      - "8060:8080"

  cs-http:
    build:
      context: .
      dockerfile: cs-http.Dockerfile
    environment:
      DB_USER: dirtviz
      DB_PASS: password
      DB_HOST: postgresql
      DB_PORT: 5432
      DB_DATABASE: dirtviz
    expose:
      - "8100"
    depends_on:
      - postgresql

  http-api:
    build:
      context: .
      dockerfile: http-api.Dockerfile
    environment:
      DB_USER: dirtviz
      DB_PASS: password
      DB_HOST: postgresql
      DB_PORT: 5432
      DB_DATABASE: dirtviz
    expose:
      - "8090"
    depends_on:
      - postgresql


volumes:
  postgresqldata:
